//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rac.VOne.Client.Screen.MatchingService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MatchingService.IMatchingService")]
    public interface IMatchingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Collate", ReplyAction="http://tempuri.org/IMatchingService/CollateResponse")]
        Rac.VOne.Web.Models.CollationsResult Collate(string SessionKey, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Collate", ReplyAction="http://tempuri.org/IMatchingService/CollateResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CollationsResult> CollateAsync(string SessionKey, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SequentialMatching", ReplyAction="http://tempuri.org/IMatchingService/SequentialMatchingResponse")]
        Rac.VOne.Web.Models.MatchingResult SequentialMatching(string SessionKey, Rac.VOne.Web.Models.Collation[] Collations, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SequentialMatching", ReplyAction="http://tempuri.org/IMatchingService/SequentialMatchingResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingResult> SequentialMatchingAsync(string SessionKey, Rac.VOne.Web.Models.Collation[] Collations, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SearchMatchedData", ReplyAction="http://tempuri.org/IMatchingService/SearchMatchedDataResponse")]
        Rac.VOne.Web.Models.MatchingHeadersResult SearchMatchedData(string SessionKey, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SearchMatchedData", ReplyAction="http://tempuri.org/IMatchingService/SearchMatchedDataResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingHeadersResult> SearchMatchedDataAsync(string SessionKey, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/CancelMatching", ReplyAction="http://tempuri.org/IMatchingService/CancelMatchingResponse")]
        Rac.VOne.Web.Models.MatchingResult CancelMatching(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] MatchingHeader, int LoginUserId, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/CancelMatching", ReplyAction="http://tempuri.org/IMatchingService/CancelMatchingResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingResult> CancelMatchingAsync(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] MatchingHeader, int LoginUserId, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SearchBillingData", ReplyAction="http://tempuri.org/IMatchingService/SearchBillingDataResponse")]
        Rac.VOne.Web.Models.BillingsResult SearchBillingData(string SessionKey, Rac.VOne.Web.Models.MatchingBillingSearch MatchingBillingSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SearchBillingData", ReplyAction="http://tempuri.org/IMatchingService/SearchBillingDataResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingsResult> SearchBillingDataAsync(string SessionKey, Rac.VOne.Web.Models.MatchingBillingSearch MatchingBillingSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SearchReceiptData", ReplyAction="http://tempuri.org/IMatchingService/SearchReceiptDataResponse")]
        Rac.VOne.Web.Models.ReceiptsResult SearchReceiptData(string SessionKey, Rac.VOne.Web.Models.MatchingReceiptSearch MatchingReceiptSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SearchReceiptData", ReplyAction="http://tempuri.org/IMatchingService/SearchReceiptDataResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptsResult> SearchReceiptDataAsync(string SessionKey, Rac.VOne.Web.Models.MatchingReceiptSearch MatchingReceiptSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Solve", ReplyAction="http://tempuri.org/IMatchingService/SolveResponse")]
        Rac.VOne.Web.Models.MatchingSourceResult Solve(string SessionKey, Rac.VOne.Web.Models.MatchingSource source, Rac.VOne.Web.Models.CollationSearch option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Solve", ReplyAction="http://tempuri.org/IMatchingService/SolveResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingSourceResult> SolveAsync(string SessionKey, Rac.VOne.Web.Models.MatchingSource source, Rac.VOne.Web.Models.CollationSearch option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/MatchingIndividually", ReplyAction="http://tempuri.org/IMatchingService/MatchingIndividuallyResponse")]
        Rac.VOne.Web.Models.MatchingResult MatchingIndividually(string SessionKey, Rac.VOne.Web.Models.MatchingSource source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/MatchingIndividually", ReplyAction="http://tempuri.org/IMatchingService/MatchingIndividuallyResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingResult> MatchingIndividuallyAsync(string SessionKey, Rac.VOne.Web.Models.MatchingSource source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Simulate", ReplyAction="http://tempuri.org/IMatchingService/SimulateResponse")]
        Rac.VOne.Web.Models.BillingIndicesResult Simulate(string SessionKey, Rac.VOne.Web.Models.Billing[] MatchingBilling, decimal SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Simulate", ReplyAction="http://tempuri.org/IMatchingService/SimulateResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingIndicesResult> SimulateAsync(string SessionKey, Rac.VOne.Web.Models.Billing[] MatchingBilling, decimal SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Approve", ReplyAction="http://tempuri.org/IMatchingService/ApproveResponse")]
        Rac.VOne.Web.Models.MatchingHeadersResult Approve(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] headers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Approve", ReplyAction="http://tempuri.org/IMatchingService/ApproveResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingHeadersResult> ApproveAsync(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] headers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/CancelApproval", ReplyAction="http://tempuri.org/IMatchingService/CancelApprovalResponse")]
        Rac.VOne.Web.Models.MatchingHeadersResult CancelApproval(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] headers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/CancelApproval", ReplyAction="http://tempuri.org/IMatchingService/CancelApprovalResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingHeadersResult> CancelApprovalAsync(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] headers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/searchReceiptById", ReplyAction="http://tempuri.org/IMatchingService/searchReceiptByIdResponse")]
        Rac.VOne.Web.Models.ReceiptsResult searchReceiptById(string SessionKey, long[] ReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/searchReceiptById", ReplyAction="http://tempuri.org/IMatchingService/searchReceiptByIdResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptsResult> searchReceiptByIdAsync(string SessionKey, long[] ReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Get", ReplyAction="http://tempuri.org/IMatchingService/GetResponse")]
        Rac.VOne.Web.Models.MatchingsResult Get(string SessionKey, long[] Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/Get", ReplyAction="http://tempuri.org/IMatchingService/GetResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingsResult> GetAsync(string SessionKey, long[] Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/GetHeaderItems", ReplyAction="http://tempuri.org/IMatchingService/GetHeaderItemsResponse")]
        Rac.VOne.Web.Models.MatchingHeadersResult GetHeaderItems(string SessionKey, long[] Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/GetHeaderItems", ReplyAction="http://tempuri.org/IMatchingService/GetHeaderItemsResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingHeadersResult> GetHeaderItemsAsync(string SessionKey, long[] Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/GetMatchingJournalizingDetail", ReplyAction="http://tempuri.org/IMatchingService/GetMatchingJournalizingDetailResponse")]
        Rac.VOne.Web.Models.MatchingJournalizingDetailsResult GetMatchingJournalizingDetail(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/GetMatchingJournalizingDetail", ReplyAction="http://tempuri.org/IMatchingService/GetMatchingJournalizingDetailResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingDetailsResult> GetMatchingJournalizingDetailAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/CancelMatchingJournalizingDetail", ReplyAction="http://tempuri.org/IMatchingService/CancelMatchingJournalizingDetailResponse")]
        Rac.VOne.Web.Models.MatchingJournalizingProcessResult CancelMatchingJournalizingDetail(string SessionKey, Rac.VOne.Web.Models.MatchingJournalizingDetail[] MatchingJournalizingDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/CancelMatchingJournalizingDetail", ReplyAction="http://tempuri.org/IMatchingService/CancelMatchingJournalizingDetailResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingProcessResult> CancelMatchingJournalizingDetailAsync(string SessionKey, Rac.VOne.Web.Models.MatchingJournalizingDetail[] MatchingJournalizingDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/GetMatchingJournalizingSummary", ReplyAction="http://tempuri.org/IMatchingService/GetMatchingJournalizingSummaryResponse")]
        Rac.VOne.Web.Models.JournalizingSummariesResult GetMatchingJournalizingSummary(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/GetMatchingJournalizingSummary", ReplyAction="http://tempuri.org/IMatchingService/GetMatchingJournalizingSummaryResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.JournalizingSummariesResult> GetMatchingJournalizingSummaryAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/ExtractMatchingJournalizing", ReplyAction="http://tempuri.org/IMatchingService/ExtractMatchingJournalizingResponse")]
        Rac.VOne.Web.Models.MatchingJournalizingsResult ExtractMatchingJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/ExtractMatchingJournalizing", ReplyAction="http://tempuri.org/IMatchingService/ExtractMatchingJournalizingResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingsResult> ExtractMatchingJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/ExtractGeneralJournalizing", ReplyAction="http://tempuri.org/IMatchingService/ExtractGeneralJournalizingResponse")]
        Rac.VOne.Web.Models.GeneralJournalizingsResult ExtractGeneralJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/ExtractGeneralJournalizing", ReplyAction="http://tempuri.org/IMatchingService/ExtractGeneralJournalizingResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.GeneralJournalizingsResult> ExtractGeneralJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/GetMatchedReceipt", ReplyAction="http://tempuri.org/IMatchingService/GetMatchedReceiptResponse")]
        Rac.VOne.Web.Models.MatchedReceiptsResult GetMatchedReceipt(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/GetMatchedReceipt", ReplyAction="http://tempuri.org/IMatchingService/GetMatchedReceiptResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchedReceiptsResult> GetMatchedReceiptAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/UpdateOutputAt", ReplyAction="http://tempuri.org/IMatchingService/UpdateOutputAtResponse")]
        Rac.VOne.Web.Models.MatchingJournalizingProcessResult UpdateOutputAt(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/UpdateOutputAt", ReplyAction="http://tempuri.org/IMatchingService/UpdateOutputAtResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingProcessResult> UpdateOutputAtAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/CancelMatchingJournalizing", ReplyAction="http://tempuri.org/IMatchingService/CancelMatchingJournalizingResponse")]
        Rac.VOne.Web.Models.MatchingJournalizingProcessResult CancelMatchingJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/CancelMatchingJournalizing", ReplyAction="http://tempuri.org/IMatchingService/CancelMatchingJournalizingResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingProcessResult> CancelMatchingJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SaveWorkDepartmentTarget", ReplyAction="http://tempuri.org/IMatchingService/SaveWorkDepartmentTargetResponse")]
        Rac.VOne.Web.Models.CountResult SaveWorkDepartmentTarget(string SessionKey, int CompanyId, byte[] ClientKey, int[] DepartmentIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SaveWorkDepartmentTarget", ReplyAction="http://tempuri.org/IMatchingService/SaveWorkDepartmentTargetResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> SaveWorkDepartmentTargetAsync(string SessionKey, int CompanyId, byte[] ClientKey, int[] DepartmentIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SaveWorkSectionTarget", ReplyAction="http://tempuri.org/IMatchingService/SaveWorkSectionTargetResponse")]
        Rac.VOne.Web.Models.CountResult SaveWorkSectionTarget(string SessionKey, int CompanyId, byte[] ClientKey, int[] SectionIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/SaveWorkSectionTarget", ReplyAction="http://tempuri.org/IMatchingService/SaveWorkSectionTargetResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> SaveWorkSectionTargetAsync(string SessionKey, int CompanyId, byte[] ClientKey, int[] SectionIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/MFExtractMatchingJournalizing", ReplyAction="http://tempuri.org/IMatchingService/MFExtractMatchingJournalizingResponse")]
        Rac.VOne.Web.Models.MatchingJournalizingsResult MFExtractMatchingJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchingService/MFExtractMatchingJournalizing", ReplyAction="http://tempuri.org/IMatchingService/MFExtractMatchingJournalizingResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingsResult> MFExtractMatchingJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchingServiceChannel : Rac.VOne.Client.Screen.MatchingService.IMatchingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchingServiceClient : System.ServiceModel.ClientBase<Rac.VOne.Client.Screen.MatchingService.IMatchingService>, Rac.VOne.Client.Screen.MatchingService.IMatchingService {
        
        public MatchingServiceClient() {
        }
        
        public MatchingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MatchingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Rac.VOne.Web.Models.CollationsResult Collate(string SessionKey, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId) {
            return base.Channel.Collate(SessionKey, CollationSearch, connectionId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CollationsResult> CollateAsync(string SessionKey, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId) {
            return base.Channel.CollateAsync(SessionKey, CollationSearch, connectionId);
        }
        
        public Rac.VOne.Web.Models.MatchingResult SequentialMatching(string SessionKey, Rac.VOne.Web.Models.Collation[] Collations, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId) {
            return base.Channel.SequentialMatching(SessionKey, Collations, CollationSearch, connectionId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingResult> SequentialMatchingAsync(string SessionKey, Rac.VOne.Web.Models.Collation[] Collations, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId) {
            return base.Channel.SequentialMatchingAsync(SessionKey, Collations, CollationSearch, connectionId);
        }
        
        public Rac.VOne.Web.Models.MatchingHeadersResult SearchMatchedData(string SessionKey, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId) {
            return base.Channel.SearchMatchedData(SessionKey, CollationSearch, connectionId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingHeadersResult> SearchMatchedDataAsync(string SessionKey, Rac.VOne.Web.Models.CollationSearch CollationSearch, string connectionId) {
            return base.Channel.SearchMatchedDataAsync(SessionKey, CollationSearch, connectionId);
        }
        
        public Rac.VOne.Web.Models.MatchingResult CancelMatching(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] MatchingHeader, int LoginUserId, string connectionId) {
            return base.Channel.CancelMatching(SessionKey, MatchingHeader, LoginUserId, connectionId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingResult> CancelMatchingAsync(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] MatchingHeader, int LoginUserId, string connectionId) {
            return base.Channel.CancelMatchingAsync(SessionKey, MatchingHeader, LoginUserId, connectionId);
        }
        
        public Rac.VOne.Web.Models.BillingsResult SearchBillingData(string SessionKey, Rac.VOne.Web.Models.MatchingBillingSearch MatchingBillingSearch) {
            return base.Channel.SearchBillingData(SessionKey, MatchingBillingSearch);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingsResult> SearchBillingDataAsync(string SessionKey, Rac.VOne.Web.Models.MatchingBillingSearch MatchingBillingSearch) {
            return base.Channel.SearchBillingDataAsync(SessionKey, MatchingBillingSearch);
        }
        
        public Rac.VOne.Web.Models.ReceiptsResult SearchReceiptData(string SessionKey, Rac.VOne.Web.Models.MatchingReceiptSearch MatchingReceiptSearch) {
            return base.Channel.SearchReceiptData(SessionKey, MatchingReceiptSearch);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptsResult> SearchReceiptDataAsync(string SessionKey, Rac.VOne.Web.Models.MatchingReceiptSearch MatchingReceiptSearch) {
            return base.Channel.SearchReceiptDataAsync(SessionKey, MatchingReceiptSearch);
        }
        
        public Rac.VOne.Web.Models.MatchingSourceResult Solve(string SessionKey, Rac.VOne.Web.Models.MatchingSource source, Rac.VOne.Web.Models.CollationSearch option) {
            return base.Channel.Solve(SessionKey, source, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingSourceResult> SolveAsync(string SessionKey, Rac.VOne.Web.Models.MatchingSource source, Rac.VOne.Web.Models.CollationSearch option) {
            return base.Channel.SolveAsync(SessionKey, source, option);
        }
        
        public Rac.VOne.Web.Models.MatchingResult MatchingIndividually(string SessionKey, Rac.VOne.Web.Models.MatchingSource source) {
            return base.Channel.MatchingIndividually(SessionKey, source);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingResult> MatchingIndividuallyAsync(string SessionKey, Rac.VOne.Web.Models.MatchingSource source) {
            return base.Channel.MatchingIndividuallyAsync(SessionKey, source);
        }
        
        public Rac.VOne.Web.Models.BillingIndicesResult Simulate(string SessionKey, Rac.VOne.Web.Models.Billing[] MatchingBilling, decimal SearchValue) {
            return base.Channel.Simulate(SessionKey, MatchingBilling, SearchValue);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingIndicesResult> SimulateAsync(string SessionKey, Rac.VOne.Web.Models.Billing[] MatchingBilling, decimal SearchValue) {
            return base.Channel.SimulateAsync(SessionKey, MatchingBilling, SearchValue);
        }
        
        public Rac.VOne.Web.Models.MatchingHeadersResult Approve(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] headers) {
            return base.Channel.Approve(SessionKey, headers);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingHeadersResult> ApproveAsync(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] headers) {
            return base.Channel.ApproveAsync(SessionKey, headers);
        }
        
        public Rac.VOne.Web.Models.MatchingHeadersResult CancelApproval(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] headers) {
            return base.Channel.CancelApproval(SessionKey, headers);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingHeadersResult> CancelApprovalAsync(string SessionKey, Rac.VOne.Web.Models.MatchingHeader[] headers) {
            return base.Channel.CancelApprovalAsync(SessionKey, headers);
        }
        
        public Rac.VOne.Web.Models.ReceiptsResult searchReceiptById(string SessionKey, long[] ReceiptId) {
            return base.Channel.searchReceiptById(SessionKey, ReceiptId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptsResult> searchReceiptByIdAsync(string SessionKey, long[] ReceiptId) {
            return base.Channel.searchReceiptByIdAsync(SessionKey, ReceiptId);
        }
        
        public Rac.VOne.Web.Models.MatchingsResult Get(string SessionKey, long[] Ids) {
            return base.Channel.Get(SessionKey, Ids);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingsResult> GetAsync(string SessionKey, long[] Ids) {
            return base.Channel.GetAsync(SessionKey, Ids);
        }
        
        public Rac.VOne.Web.Models.MatchingHeadersResult GetHeaderItems(string SessionKey, long[] Ids) {
            return base.Channel.GetHeaderItems(SessionKey, Ids);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingHeadersResult> GetHeaderItemsAsync(string SessionKey, long[] Ids) {
            return base.Channel.GetHeaderItemsAsync(SessionKey, Ids);
        }
        
        public Rac.VOne.Web.Models.MatchingJournalizingDetailsResult GetMatchingJournalizingDetail(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.GetMatchingJournalizingDetail(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingDetailsResult> GetMatchingJournalizingDetailAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.GetMatchingJournalizingDetailAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.MatchingJournalizingProcessResult CancelMatchingJournalizingDetail(string SessionKey, Rac.VOne.Web.Models.MatchingJournalizingDetail[] MatchingJournalizingDetail) {
            return base.Channel.CancelMatchingJournalizingDetail(SessionKey, MatchingJournalizingDetail);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingProcessResult> CancelMatchingJournalizingDetailAsync(string SessionKey, Rac.VOne.Web.Models.MatchingJournalizingDetail[] MatchingJournalizingDetail) {
            return base.Channel.CancelMatchingJournalizingDetailAsync(SessionKey, MatchingJournalizingDetail);
        }
        
        public Rac.VOne.Web.Models.JournalizingSummariesResult GetMatchingJournalizingSummary(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.GetMatchingJournalizingSummary(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.JournalizingSummariesResult> GetMatchingJournalizingSummaryAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.GetMatchingJournalizingSummaryAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.MatchingJournalizingsResult ExtractMatchingJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.ExtractMatchingJournalizing(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingsResult> ExtractMatchingJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.ExtractMatchingJournalizingAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.GeneralJournalizingsResult ExtractGeneralJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.ExtractGeneralJournalizing(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.GeneralJournalizingsResult> ExtractGeneralJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.ExtractGeneralJournalizingAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.MatchedReceiptsResult GetMatchedReceipt(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.GetMatchedReceipt(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchedReceiptsResult> GetMatchedReceiptAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.GetMatchedReceiptAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.MatchingJournalizingProcessResult UpdateOutputAt(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.UpdateOutputAt(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingProcessResult> UpdateOutputAtAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.UpdateOutputAtAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.MatchingJournalizingProcessResult CancelMatchingJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.CancelMatchingJournalizing(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingProcessResult> CancelMatchingJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.CancelMatchingJournalizingAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.CountResult SaveWorkDepartmentTarget(string SessionKey, int CompanyId, byte[] ClientKey, int[] DepartmentIds) {
            return base.Channel.SaveWorkDepartmentTarget(SessionKey, CompanyId, ClientKey, DepartmentIds);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> SaveWorkDepartmentTargetAsync(string SessionKey, int CompanyId, byte[] ClientKey, int[] DepartmentIds) {
            return base.Channel.SaveWorkDepartmentTargetAsync(SessionKey, CompanyId, ClientKey, DepartmentIds);
        }
        
        public Rac.VOne.Web.Models.CountResult SaveWorkSectionTarget(string SessionKey, int CompanyId, byte[] ClientKey, int[] SectionIds) {
            return base.Channel.SaveWorkSectionTarget(SessionKey, CompanyId, ClientKey, SectionIds);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> SaveWorkSectionTargetAsync(string SessionKey, int CompanyId, byte[] ClientKey, int[] SectionIds) {
            return base.Channel.SaveWorkSectionTargetAsync(SessionKey, CompanyId, ClientKey, SectionIds);
        }
        
        public Rac.VOne.Web.Models.MatchingJournalizingsResult MFExtractMatchingJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.MFExtractMatchingJournalizing(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.MatchingJournalizingsResult> MFExtractMatchingJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.MFExtractMatchingJournalizingAsync(SessionKey, option);
        }
    }
}
