//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rac.VOne.Client.Screen.NettingService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NettingService.INettingService")]
    public interface INettingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/ExistCustomer", ReplyAction="http://tempuri.org/INettingService/ExistCustomerResponse")]
        Rac.VOne.Web.Models.ExistResult ExistCustomer(string SessionKey, int CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/ExistCustomer", ReplyAction="http://tempuri.org/INettingService/ExistCustomerResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCustomerAsync(string SessionKey, int CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/ExistReceiptCategory", ReplyAction="http://tempuri.org/INettingService/ExistReceiptCategoryResponse")]
        Rac.VOne.Web.Models.ExistResult ExistReceiptCategory(string SessionKey, int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/ExistReceiptCategory", ReplyAction="http://tempuri.org/INettingService/ExistReceiptCategoryResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistReceiptCategoryAsync(string SessionKey, int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/ExistCurrency", ReplyAction="http://tempuri.org/INettingService/ExistCurrencyResponse")]
        Rac.VOne.Web.Models.ExistResult ExistCurrency(string SessionKey, int CurrencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/ExistCurrency", ReplyAction="http://tempuri.org/INettingService/ExistCurrencyResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCurrencyAsync(string SessionKey, int CurrencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/Save", ReplyAction="http://tempuri.org/INettingService/SaveResponse")]
        Rac.VOne.Web.Models.NettingResult Save(string SessionKey, Rac.VOne.Web.Models.Netting[] Netting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/Save", ReplyAction="http://tempuri.org/INettingService/SaveResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.NettingResult> SaveAsync(string SessionKey, Rac.VOne.Web.Models.Netting[] Netting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/GetItems", ReplyAction="http://tempuri.org/INettingService/GetItemsResponse")]
        Rac.VOne.Web.Models.NettingsResult GetItems(string SessionKey, int CompanyId, int CustomerId, int CurrencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/GetItems", ReplyAction="http://tempuri.org/INettingService/GetItemsResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.NettingsResult> GetItemsAsync(string SessionKey, int CompanyId, int CustomerId, int CurrencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/Delete", ReplyAction="http://tempuri.org/INettingService/DeleteResponse")]
        Rac.VOne.Web.Models.NettingResult Delete(string SessionKey, long[] NettingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/Delete", ReplyAction="http://tempuri.org/INettingService/DeleteResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.NettingResult> DeleteAsync(string SessionKey, long[] NettingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/ExistSection", ReplyAction="http://tempuri.org/INettingService/ExistSectionResponse")]
        Rac.VOne.Web.Models.ExistResult ExistSection(string SectionKey, int SectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INettingService/ExistSection", ReplyAction="http://tempuri.org/INettingService/ExistSectionResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistSectionAsync(string SectionKey, int SectionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INettingServiceChannel : Rac.VOne.Client.Screen.NettingService.INettingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NettingServiceClient : System.ServiceModel.ClientBase<Rac.VOne.Client.Screen.NettingService.INettingService>, Rac.VOne.Client.Screen.NettingService.INettingService {
        
        public NettingServiceClient() {
        }
        
        public NettingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NettingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NettingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NettingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistCustomer(string SessionKey, int CustomerId) {
            return base.Channel.ExistCustomer(SessionKey, CustomerId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCustomerAsync(string SessionKey, int CustomerId) {
            return base.Channel.ExistCustomerAsync(SessionKey, CustomerId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistReceiptCategory(string SessionKey, int CategoryId) {
            return base.Channel.ExistReceiptCategory(SessionKey, CategoryId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistReceiptCategoryAsync(string SessionKey, int CategoryId) {
            return base.Channel.ExistReceiptCategoryAsync(SessionKey, CategoryId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistCurrency(string SessionKey, int CurrencyId) {
            return base.Channel.ExistCurrency(SessionKey, CurrencyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCurrencyAsync(string SessionKey, int CurrencyId) {
            return base.Channel.ExistCurrencyAsync(SessionKey, CurrencyId);
        }
        
        public Rac.VOne.Web.Models.NettingResult Save(string SessionKey, Rac.VOne.Web.Models.Netting[] Netting) {
            return base.Channel.Save(SessionKey, Netting);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.NettingResult> SaveAsync(string SessionKey, Rac.VOne.Web.Models.Netting[] Netting) {
            return base.Channel.SaveAsync(SessionKey, Netting);
        }
        
        public Rac.VOne.Web.Models.NettingsResult GetItems(string SessionKey, int CompanyId, int CustomerId, int CurrencyId) {
            return base.Channel.GetItems(SessionKey, CompanyId, CustomerId, CurrencyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.NettingsResult> GetItemsAsync(string SessionKey, int CompanyId, int CustomerId, int CurrencyId) {
            return base.Channel.GetItemsAsync(SessionKey, CompanyId, CustomerId, CurrencyId);
        }
        
        public Rac.VOne.Web.Models.NettingResult Delete(string SessionKey, long[] NettingId) {
            return base.Channel.Delete(SessionKey, NettingId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.NettingResult> DeleteAsync(string SessionKey, long[] NettingId) {
            return base.Channel.DeleteAsync(SessionKey, NettingId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistSection(string SectionKey, int SectionId) {
            return base.Channel.ExistSection(SectionKey, SectionId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistSectionAsync(string SectionKey, int SectionId) {
            return base.Channel.ExistSectionAsync(SectionKey, SectionId);
        }
    }
}
