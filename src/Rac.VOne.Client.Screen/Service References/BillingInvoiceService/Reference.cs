//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rac.VOne.Client.Screen.BillingInvoiceService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BillingInvoiceService.IBillingInvoiceService")]
    public interface IBillingInvoiceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/Get", ReplyAction="http://tempuri.org/IBillingInvoiceService/GetResponse")]
        Rac.VOne.Web.Models.BillingInvoiceResult Get(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceSearch searchOption, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/Get", ReplyAction="http://tempuri.org/IBillingInvoiceService/GetResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingInvoiceResult> GetAsync(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceSearch searchOption, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/PublishInvoices", ReplyAction="http://tempuri.org/IBillingInvoiceService/PublishInvoicesResponse")]
        Rac.VOne.Web.Models.BillingInputResult PublishInvoices(string SessionKey, string connectionId, Rac.VOne.Web.Models.BillingInvoiceForPublish[] invoices, int LoginUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/PublishInvoices", ReplyAction="http://tempuri.org/IBillingInvoiceService/PublishInvoicesResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingInputResult> PublishInvoicesAsync(string SessionKey, string connectionId, Rac.VOne.Web.Models.BillingInvoiceForPublish[] invoices, int LoginUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/GetDetailsForPrint", ReplyAction="http://tempuri.org/IBillingInvoiceService/GetDetailsForPrintResponse")]
        Rac.VOne.Web.Models.BillingInvoiceDetailResult GetDetailsForPrint(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceDetailSearch billingInvoiceDetailSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/GetDetailsForPrint", ReplyAction="http://tempuri.org/IBillingInvoiceService/GetDetailsForPrintResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingInvoiceDetailResult> GetDetailsForPrintAsync(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceDetailSearch billingInvoiceDetailSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/GetCount", ReplyAction="http://tempuri.org/IBillingInvoiceService/GetCountResponse")]
        Rac.VOne.Web.Models.CountResult GetCount(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceSearch searchOption, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/GetCount", ReplyAction="http://tempuri.org/IBillingInvoiceService/GetCountResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> GetCountAsync(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceSearch searchOption, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/DeleteWorkTable", ReplyAction="http://tempuri.org/IBillingInvoiceService/DeleteWorkTableResponse")]
        Rac.VOne.Web.Models.CountResult DeleteWorkTable(string SessionKey, byte[] ClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/DeleteWorkTable", ReplyAction="http://tempuri.org/IBillingInvoiceService/DeleteWorkTableResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> DeleteWorkTableAsync(string SessionKey, byte[] ClientKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/CancelPublish", ReplyAction="http://tempuri.org/IBillingInvoiceService/CancelPublishResponse")]
        Rac.VOne.Web.Models.CountResult CancelPublish(string SessionKey, string connectionId, long[] BilinngInputIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/CancelPublish", ReplyAction="http://tempuri.org/IBillingInvoiceService/CancelPublishResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> CancelPublishAsync(string SessionKey, string connectionId, long[] BilinngInputIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/GetDetailsForExport", ReplyAction="http://tempuri.org/IBillingInvoiceService/GetDetailsForExportResponse")]
        Rac.VOne.Web.Models.BillingInvoiceDetailForExportResult GetDetailsForExport(string SessionKey, long[] BillingInputIds, int CompanyId, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/GetDetailsForExport", ReplyAction="http://tempuri.org/IBillingInvoiceService/GetDetailsForExportResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingInvoiceDetailForExportResult> GetDetailsForExportAsync(string SessionKey, long[] BillingInputIds, int CompanyId, string connectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/UpdatePublishAt", ReplyAction="http://tempuri.org/IBillingInvoiceService/UpdatePublishAtResponse")]
        Rac.VOne.Web.Models.CountResult UpdatePublishAt(string SessionKey, string connectionId, long[] BilinngInputIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillingInvoiceService/UpdatePublishAt", ReplyAction="http://tempuri.org/IBillingInvoiceService/UpdatePublishAtResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> UpdatePublishAtAsync(string SessionKey, string connectionId, long[] BilinngInputIds);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBillingInvoiceServiceChannel : Rac.VOne.Client.Screen.BillingInvoiceService.IBillingInvoiceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BillingInvoiceServiceClient : System.ServiceModel.ClientBase<Rac.VOne.Client.Screen.BillingInvoiceService.IBillingInvoiceService>, Rac.VOne.Client.Screen.BillingInvoiceService.IBillingInvoiceService {
        
        public BillingInvoiceServiceClient() {
        }
        
        public BillingInvoiceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BillingInvoiceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BillingInvoiceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BillingInvoiceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Rac.VOne.Web.Models.BillingInvoiceResult Get(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceSearch searchOption, string connectionId) {
            return base.Channel.Get(SessionKey, searchOption, connectionId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingInvoiceResult> GetAsync(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceSearch searchOption, string connectionId) {
            return base.Channel.GetAsync(SessionKey, searchOption, connectionId);
        }
        
        public Rac.VOne.Web.Models.BillingInputResult PublishInvoices(string SessionKey, string connectionId, Rac.VOne.Web.Models.BillingInvoiceForPublish[] invoices, int LoginUserId) {
            return base.Channel.PublishInvoices(SessionKey, connectionId, invoices, LoginUserId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingInputResult> PublishInvoicesAsync(string SessionKey, string connectionId, Rac.VOne.Web.Models.BillingInvoiceForPublish[] invoices, int LoginUserId) {
            return base.Channel.PublishInvoicesAsync(SessionKey, connectionId, invoices, LoginUserId);
        }
        
        public Rac.VOne.Web.Models.BillingInvoiceDetailResult GetDetailsForPrint(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceDetailSearch billingInvoiceDetailSearch) {
            return base.Channel.GetDetailsForPrint(SessionKey, billingInvoiceDetailSearch);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingInvoiceDetailResult> GetDetailsForPrintAsync(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceDetailSearch billingInvoiceDetailSearch) {
            return base.Channel.GetDetailsForPrintAsync(SessionKey, billingInvoiceDetailSearch);
        }
        
        public Rac.VOne.Web.Models.CountResult GetCount(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceSearch searchOption, string connectionId) {
            return base.Channel.GetCount(SessionKey, searchOption, connectionId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> GetCountAsync(string SessionKey, Rac.VOne.Web.Models.BillingInvoiceSearch searchOption, string connectionId) {
            return base.Channel.GetCountAsync(SessionKey, searchOption, connectionId);
        }
        
        public Rac.VOne.Web.Models.CountResult DeleteWorkTable(string SessionKey, byte[] ClientKey) {
            return base.Channel.DeleteWorkTable(SessionKey, ClientKey);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> DeleteWorkTableAsync(string SessionKey, byte[] ClientKey) {
            return base.Channel.DeleteWorkTableAsync(SessionKey, ClientKey);
        }
        
        public Rac.VOne.Web.Models.CountResult CancelPublish(string SessionKey, string connectionId, long[] BilinngInputIds) {
            return base.Channel.CancelPublish(SessionKey, connectionId, BilinngInputIds);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> CancelPublishAsync(string SessionKey, string connectionId, long[] BilinngInputIds) {
            return base.Channel.CancelPublishAsync(SessionKey, connectionId, BilinngInputIds);
        }
        
        public Rac.VOne.Web.Models.BillingInvoiceDetailForExportResult GetDetailsForExport(string SessionKey, long[] BillingInputIds, int CompanyId, string connectionId) {
            return base.Channel.GetDetailsForExport(SessionKey, BillingInputIds, CompanyId, connectionId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.BillingInvoiceDetailForExportResult> GetDetailsForExportAsync(string SessionKey, long[] BillingInputIds, int CompanyId, string connectionId) {
            return base.Channel.GetDetailsForExportAsync(SessionKey, BillingInputIds, CompanyId, connectionId);
        }
        
        public Rac.VOne.Web.Models.CountResult UpdatePublishAt(string SessionKey, string connectionId, long[] BilinngInputIds) {
            return base.Channel.UpdatePublishAt(SessionKey, connectionId, BilinngInputIds);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> UpdatePublishAtAsync(string SessionKey, string connectionId, long[] BilinngInputIds) {
            return base.Channel.UpdatePublishAtAsync(SessionKey, connectionId, BilinngInputIds);
        }
    }
}
