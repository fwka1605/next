//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rac.VOne.Client.Screen.AccountTransferService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountTransferService.IAccountTransferService")]
    public interface IAccountTransferService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountTransferService/Get", ReplyAction="http://tempuri.org/IAccountTransferService/GetResponse")]
        Rac.VOne.Web.Models.AccountTransferLogsResult Get(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountTransferService/Get", ReplyAction="http://tempuri.org/IAccountTransferService/GetResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.AccountTransferLogsResult> GetAsync(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountTransferService/Extract", ReplyAction="http://tempuri.org/IAccountTransferService/ExtractResponse")]
        Rac.VOne.Web.Models.AccountTransferDetailsResult Extract(string SessionKey, Rac.VOne.Web.Models.AccountTransferSearch SearchOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountTransferService/Extract", ReplyAction="http://tempuri.org/IAccountTransferService/ExtractResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.AccountTransferDetailsResult> ExtractAsync(string SessionKey, Rac.VOne.Web.Models.AccountTransferSearch SearchOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountTransferService/Cancel", ReplyAction="http://tempuri.org/IAccountTransferService/CancelResponse")]
        Rac.VOne.Web.Models.CountResult Cancel(string SessionKey, long[] AccountTransferLogIds, int LoginUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountTransferService/Cancel", ReplyAction="http://tempuri.org/IAccountTransferService/CancelResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> CancelAsync(string SessionKey, long[] AccountTransferLogIds, int LoginUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountTransferService/Save", ReplyAction="http://tempuri.org/IAccountTransferService/SaveResponse")]
        Rac.VOne.Web.Models.AccountTransferDetailsResult Save(string SessionKey, Rac.VOne.Web.Models.AccountTransferDetail[] AccountTransferDetails, bool Aggregate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountTransferService/Save", ReplyAction="http://tempuri.org/IAccountTransferService/SaveResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.AccountTransferDetailsResult> SaveAsync(string SessionKey, Rac.VOne.Web.Models.AccountTransferDetail[] AccountTransferDetails, bool Aggregate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountTransferServiceChannel : Rac.VOne.Client.Screen.AccountTransferService.IAccountTransferService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountTransferServiceClient : System.ServiceModel.ClientBase<Rac.VOne.Client.Screen.AccountTransferService.IAccountTransferService>, Rac.VOne.Client.Screen.AccountTransferService.IAccountTransferService {
        
        public AccountTransferServiceClient() {
        }
        
        public AccountTransferServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountTransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountTransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountTransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Rac.VOne.Web.Models.AccountTransferLogsResult Get(string SessionKey, int CompanyId) {
            return base.Channel.Get(SessionKey, CompanyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.AccountTransferLogsResult> GetAsync(string SessionKey, int CompanyId) {
            return base.Channel.GetAsync(SessionKey, CompanyId);
        }
        
        public Rac.VOne.Web.Models.AccountTransferDetailsResult Extract(string SessionKey, Rac.VOne.Web.Models.AccountTransferSearch SearchOption) {
            return base.Channel.Extract(SessionKey, SearchOption);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.AccountTransferDetailsResult> ExtractAsync(string SessionKey, Rac.VOne.Web.Models.AccountTransferSearch SearchOption) {
            return base.Channel.ExtractAsync(SessionKey, SearchOption);
        }
        
        public Rac.VOne.Web.Models.CountResult Cancel(string SessionKey, long[] AccountTransferLogIds, int LoginUserId) {
            return base.Channel.Cancel(SessionKey, AccountTransferLogIds, LoginUserId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> CancelAsync(string SessionKey, long[] AccountTransferLogIds, int LoginUserId) {
            return base.Channel.CancelAsync(SessionKey, AccountTransferLogIds, LoginUserId);
        }
        
        public Rac.VOne.Web.Models.AccountTransferDetailsResult Save(string SessionKey, Rac.VOne.Web.Models.AccountTransferDetail[] AccountTransferDetails, bool Aggregate) {
            return base.Channel.Save(SessionKey, AccountTransferDetails, Aggregate);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.AccountTransferDetailsResult> SaveAsync(string SessionKey, Rac.VOne.Web.Models.AccountTransferDetail[] AccountTransferDetails, bool Aggregate) {
            return base.Channel.SaveAsync(SessionKey, AccountTransferDetails, Aggregate);
        }
    }
}
