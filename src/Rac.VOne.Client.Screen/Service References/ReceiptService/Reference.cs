//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rac.VOne.Client.Screen.ReceiptService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReceiptService.IReceiptService")]
    public interface IReceiptService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Save", ReplyAction="http://tempuri.org/IReceiptService/SaveResponse")]
        Rac.VOne.Web.Models.ReceiptInputsResult Save(string SessionKey, Rac.VOne.Web.Models.ReceiptInput[] ReceiptInput, byte[] ClientKey, int ParentCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Save", ReplyAction="http://tempuri.org/IReceiptService/SaveResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptInputsResult> SaveAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptInput[] ReceiptInput, byte[] ClientKey, int ParentCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Delete", ReplyAction="http://tempuri.org/IReceiptService/DeleteResponse")]
        Rac.VOne.Web.Models.CountResult Delete(string SessionKey, long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Delete", ReplyAction="http://tempuri.org/IReceiptService/DeleteResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> DeleteAsync(string SessionKey, long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Get", ReplyAction="http://tempuri.org/IReceiptService/GetResponse")]
        Rac.VOne.Web.Models.ReceiptsResult Get(string SessionKey, long[] Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Get", ReplyAction="http://tempuri.org/IReceiptService/GetResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptsResult> GetAsync(string SessionKey, long[] Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetItems", ReplyAction="http://tempuri.org/IReceiptService/GetItemsResponse")]
        Rac.VOne.Web.Models.ReceiptsResult GetItems(string SessionKey, Rac.VOne.Web.Models.ReceiptSearch ReceiptSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetItems", ReplyAction="http://tempuri.org/IReceiptService/GetItemsResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptsResult> GetItemsAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptSearch ReceiptSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetAdvanceReceipts", ReplyAction="http://tempuri.org/IReceiptService/GetAdvanceReceiptsResponse")]
        Rac.VOne.Web.Models.AdvanceReceiptsResult GetAdvanceReceipts(string SessionKey, long originalReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetAdvanceReceipts", ReplyAction="http://tempuri.org/IReceiptService/GetAdvanceReceiptsResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.AdvanceReceiptsResult> GetAdvanceReceiptsAsync(string SessionKey, long originalReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/SaveExcludeAmount", ReplyAction="http://tempuri.org/IReceiptService/SaveExcludeAmountResponse")]
        Rac.VOne.Web.Models.ReceiptExcludeResult SaveExcludeAmount(string SessionKey, Rac.VOne.Web.Models.ReceiptExclude[] RecExc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/SaveExcludeAmount", ReplyAction="http://tempuri.org/IReceiptService/SaveExcludeAmountResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptExcludeResult> SaveExcludeAmountAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptExclude[] RecExc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/SaveMemo", ReplyAction="http://tempuri.org/IReceiptService/SaveMemoResponse")]
        Rac.VOne.Web.Models.ReceiptResult SaveMemo(string SessionKey, long ReceiptId, string Memo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/SaveMemo", ReplyAction="http://tempuri.org/IReceiptService/SaveMemoResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptResult> SaveMemoAsync(string SessionKey, long ReceiptId, string Memo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/DeleteMemo", ReplyAction="http://tempuri.org/IReceiptService/DeleteMemoResponse")]
        Rac.VOne.Web.Models.ReceiptResult DeleteMemo(string SessionKey, long ReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/DeleteMemo", ReplyAction="http://tempuri.org/IReceiptService/DeleteMemoResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptResult> DeleteMemoAsync(string SessionKey, long ReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetMemo", ReplyAction="http://tempuri.org/IReceiptService/GetMemoResponse")]
        Rac.VOne.Web.Models.ReceiptMemoResult GetMemo(string SessionKey, long ReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetMemo", ReplyAction="http://tempuri.org/IReceiptService/GetMemoResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptMemoResult> GetMemoAsync(string SessionKey, long ReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/SaveAdvanceReceived", ReplyAction="http://tempuri.org/IReceiptService/SaveAdvanceReceivedResponse")]
        Rac.VOne.Web.Models.AdvanceReceivedResult SaveAdvanceReceived(string SessionKey, Rac.VOne.Web.Models.AdvanceReceived[] ReceiptInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/SaveAdvanceReceived", ReplyAction="http://tempuri.org/IReceiptService/SaveAdvanceReceivedResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.AdvanceReceivedResult> SaveAdvanceReceivedAsync(string SessionKey, Rac.VOne.Web.Models.AdvanceReceived[] ReceiptInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/CancelAdvanceReceived", ReplyAction="http://tempuri.org/IReceiptService/CancelAdvanceReceivedResponse")]
        Rac.VOne.Web.Models.AdvanceReceivedResult CancelAdvanceReceived(string SessionKey, Rac.VOne.Web.Models.AdvanceReceived[] ReceiptInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/CancelAdvanceReceived", ReplyAction="http://tempuri.org/IReceiptService/CancelAdvanceReceivedResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.AdvanceReceivedResult> CancelAdvanceReceivedAsync(string SessionKey, Rac.VOne.Web.Models.AdvanceReceived[] ReceiptInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetHeaderItems", ReplyAction="http://tempuri.org/IReceiptService/GetHeaderItemsResponse")]
        Rac.VOne.Web.Models.ReceiptHeadersResult GetHeaderItems(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetHeaderItems", ReplyAction="http://tempuri.org/IReceiptService/GetHeaderItemsResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptHeadersResult> GetHeaderItemsAsync(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetApportionItems", ReplyAction="http://tempuri.org/IReceiptService/GetApportionItemsResponse")]
        Rac.VOne.Web.Models.ReceiptApportionsResult GetApportionItems(string SessionKey, long[] receiptHeaderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetApportionItems", ReplyAction="http://tempuri.org/IReceiptService/GetApportionItemsResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptApportionsResult> GetApportionItemsAsync(string SessionKey, long[] receiptHeaderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Apportion", ReplyAction="http://tempuri.org/IReceiptService/ApportionResponse")]
        Rac.VOne.Web.Models.ReceiptApportionsResult Apportion(string SessionKey, Rac.VOne.Web.Models.ReceiptApportion[] receiptList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Apportion", ReplyAction="http://tempuri.org/IReceiptService/ApportionResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptApportionsResult> ApportionAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptApportion[] receiptList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistCurrency", ReplyAction="http://tempuri.org/IReceiptService/ExistCurrencyResponse")]
        Rac.VOne.Web.Models.ExistResult ExistCurrency(string SessionKey, int CurrencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistCurrency", ReplyAction="http://tempuri.org/IReceiptService/ExistCurrencyResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCurrencyAsync(string SessionKey, int CurrencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistReceiptCategory", ReplyAction="http://tempuri.org/IReceiptService/ExistReceiptCategoryResponse")]
        Rac.VOne.Web.Models.ExistResult ExistReceiptCategory(string SessionKey, int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistReceiptCategory", ReplyAction="http://tempuri.org/IReceiptService/ExistReceiptCategoryResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistReceiptCategoryAsync(string SessionKey, int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistCustomer", ReplyAction="http://tempuri.org/IReceiptService/ExistCustomerResponse")]
        Rac.VOne.Web.Models.ExistResult ExistCustomer(string SessionKey, int CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistCustomer", ReplyAction="http://tempuri.org/IReceiptService/ExistCustomerResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCustomerAsync(string SessionKey, int CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistSection", ReplyAction="http://tempuri.org/IReceiptService/ExistSectionResponse")]
        Rac.VOne.Web.Models.ExistResult ExistSection(string SessionKey, int SectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistSection", ReplyAction="http://tempuri.org/IReceiptService/ExistSectionResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistSectionAsync(string SessionKey, int SectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistCompany", ReplyAction="http://tempuri.org/IReceiptService/ExistCompanyResponse")]
        Rac.VOne.Web.Models.ExistResult ExistCompany(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistCompany", ReplyAction="http://tempuri.org/IReceiptService/ExistCompanyResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCompanyAsync(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistExcludeCategory", ReplyAction="http://tempuri.org/IReceiptService/ExistExcludeCategoryResponse")]
        Rac.VOne.Web.Models.ExistResult ExistExcludeCategory(string SessionKey, int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistExcludeCategory", ReplyAction="http://tempuri.org/IReceiptService/ExistExcludeCategoryResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistExcludeCategoryAsync(string SessionKey, int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistOriginalReceipt", ReplyAction="http://tempuri.org/IReceiptService/ExistOriginalReceiptResponse")]
        Rac.VOne.Web.Models.ExistResult ExistOriginalReceipt(string SessionKey, long ReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistOriginalReceipt", ReplyAction="http://tempuri.org/IReceiptService/ExistOriginalReceiptResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistOriginalReceiptAsync(string SessionKey, long ReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistNonApportionedReceipt", ReplyAction="http://tempuri.org/IReceiptService/ExistNonApportionedReceiptResponse")]
        Rac.VOne.Web.Models.ExistResult ExistNonApportionedReceipt(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistNonApportionedReceipt", ReplyAction="http://tempuri.org/IReceiptService/ExistNonApportionedReceiptResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistNonApportionedReceiptAsync(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistNonOutputedReceipt", ReplyAction="http://tempuri.org/IReceiptService/ExistNonOutputedReceiptResponse")]
        Rac.VOne.Web.Models.ExistResult ExistNonOutputedReceipt(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistNonOutputedReceipt", ReplyAction="http://tempuri.org/IReceiptService/ExistNonOutputedReceiptResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistNonOutputedReceiptAsync(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistNonAssignmentReceipt", ReplyAction="http://tempuri.org/IReceiptService/ExistNonAssignmentReceiptResponse")]
        Rac.VOne.Web.Models.ExistResult ExistNonAssignmentReceipt(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExistNonAssignmentReceipt", ReplyAction="http://tempuri.org/IReceiptService/ExistNonAssignmentReceiptResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistNonAssignmentReceiptAsync(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Omit", ReplyAction="http://tempuri.org/IReceiptService/OmitResponse")]
        Rac.VOne.Web.Models.CountResult Omit(string sessionKey, int doDelete, int loginUserId, Rac.VOne.Web.Models.Transaction[] transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/Omit", ReplyAction="http://tempuri.org/IReceiptService/OmitResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> OmitAsync(string sessionKey, int doDelete, int loginUserId, Rac.VOne.Web.Models.Transaction[] transactions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/SaveReceiptSectionTransfer", ReplyAction="http://tempuri.org/IReceiptService/SaveReceiptSectionTransferResponse")]
        Rac.VOne.Web.Models.ReceiptSectionTransfersResult SaveReceiptSectionTransfer(string SessionKey, Rac.VOne.Web.Models.ReceiptSectionTransfer[] ReceiptSectionTransfer, int LoginUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/SaveReceiptSectionTransfer", ReplyAction="http://tempuri.org/IReceiptService/SaveReceiptSectionTransferResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptSectionTransfersResult> SaveReceiptSectionTransferAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptSectionTransfer[] ReceiptSectionTransfer, int LoginUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetReceiptSectionTransferForPrint", ReplyAction="http://tempuri.org/IReceiptService/GetReceiptSectionTransferForPrintResponse")]
        Rac.VOne.Web.Models.ReceiptSectionTransfersResult GetReceiptSectionTransferForPrint(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetReceiptSectionTransferForPrint", ReplyAction="http://tempuri.org/IReceiptService/GetReceiptSectionTransferForPrintResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptSectionTransfersResult> GetReceiptSectionTransferForPrintAsync(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/UpdateReceiptSectionTransferPrintFlag", ReplyAction="http://tempuri.org/IReceiptService/UpdateReceiptSectionTransferPrintFlagResponse")]
        Rac.VOne.Web.Models.ReceiptSectionTransfersResult UpdateReceiptSectionTransferPrintFlag(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/UpdateReceiptSectionTransferPrintFlag", ReplyAction="http://tempuri.org/IReceiptService/UpdateReceiptSectionTransferPrintFlagResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptSectionTransfersResult> UpdateReceiptSectionTransferPrintFlagAsync(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ReceiptImportDuplicationCheck", ReplyAction="http://tempuri.org/IReceiptService/ReceiptImportDuplicationCheckResponse")]
        Rac.VOne.Web.Models.ReceiptImportDuplicationResult ReceiptImportDuplicationCheck(string SessionKey, int CompanyId, Rac.VOne.Web.Models.ReceiptImportDuplication[] ReceiptImportDuplication, Rac.VOne.Web.Models.ImporterSettingDetail[] ImporterSettingDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ReceiptImportDuplicationCheck", ReplyAction="http://tempuri.org/IReceiptService/ReceiptImportDuplicationCheckResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptImportDuplicationResult> ReceiptImportDuplicationCheckAsync(string SessionKey, int CompanyId, Rac.VOne.Web.Models.ReceiptImportDuplication[] ReceiptImportDuplication, Rac.VOne.Web.Models.ImporterSettingDetail[] ImporterSettingDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/AdvanceReceivedDataSplit", ReplyAction="http://tempuri.org/IReceiptService/AdvanceReceivedDataSplitResponse")]
        Rac.VOne.Web.Models.VoidResult AdvanceReceivedDataSplit(string SessionKey, int CompanyId, int LoginUserId, int CurrencyId, long OriginalReceiptId, Rac.VOne.Web.Models.AdvanceReceivedSplit[] AdvanceReceivedSplitList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/AdvanceReceivedDataSplit", ReplyAction="http://tempuri.org/IReceiptService/AdvanceReceivedDataSplitResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.VoidResult> AdvanceReceivedDataSplitAsync(string SessionKey, int CompanyId, int LoginUserId, int CurrencyId, long OriginalReceiptId, Rac.VOne.Web.Models.AdvanceReceivedSplit[] AdvanceReceivedSplitList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/CancelAdvanceReceivedDataSplit", ReplyAction="http://tempuri.org/IReceiptService/CancelAdvanceReceivedDataSplitResponse")]
        Rac.VOne.Web.Models.VoidResult CancelAdvanceReceivedDataSplit(string SessionKey, int CompanyId, int LoginUserId, int CurrencyId, long OriginalReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/CancelAdvanceReceivedDataSplit", ReplyAction="http://tempuri.org/IReceiptService/CancelAdvanceReceivedDataSplitResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.VoidResult> CancelAdvanceReceivedDataSplitAsync(string SessionKey, int CompanyId, int LoginUserId, int CurrencyId, long OriginalReceiptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetReceiptJournalizingSummary", ReplyAction="http://tempuri.org/IReceiptService/GetReceiptJournalizingSummaryResponse")]
        Rac.VOne.Web.Models.JournalizingSummariesResult GetReceiptJournalizingSummary(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/GetReceiptJournalizingSummary", ReplyAction="http://tempuri.org/IReceiptService/GetReceiptJournalizingSummaryResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.JournalizingSummariesResult> GetReceiptJournalizingSummaryAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExtractReceiptJournalizing", ReplyAction="http://tempuri.org/IReceiptService/ExtractReceiptJournalizingResponse")]
        Rac.VOne.Web.Models.ReceiptJournalizingsResult ExtractReceiptJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExtractReceiptJournalizing", ReplyAction="http://tempuri.org/IReceiptService/ExtractReceiptJournalizingResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptJournalizingsResult> ExtractReceiptJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExtractReceiptGeneralJournalizing", ReplyAction="http://tempuri.org/IReceiptService/ExtractReceiptGeneralJournalizingResponse")]
        Rac.VOne.Web.Models.GeneralJournalizingsResult ExtractReceiptGeneralJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/ExtractReceiptGeneralJournalizing", ReplyAction="http://tempuri.org/IReceiptService/ExtractReceiptGeneralJournalizingResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.GeneralJournalizingsResult> ExtractReceiptGeneralJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/UpdateOutputAt", ReplyAction="http://tempuri.org/IReceiptService/UpdateOutputAtResponse")]
        Rac.VOne.Web.Models.CountResult UpdateOutputAt(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/UpdateOutputAt", ReplyAction="http://tempuri.org/IReceiptService/UpdateOutputAtResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> UpdateOutputAtAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/CancelReceiptJournalizing", ReplyAction="http://tempuri.org/IReceiptService/CancelReceiptJournalizingResponse")]
        Rac.VOne.Web.Models.CountResult CancelReceiptJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiptService/CancelReceiptJournalizing", ReplyAction="http://tempuri.org/IReceiptService/CancelReceiptJournalizingResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> CancelReceiptJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReceiptServiceChannel : Rac.VOne.Client.Screen.ReceiptService.IReceiptService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReceiptServiceClient : System.ServiceModel.ClientBase<Rac.VOne.Client.Screen.ReceiptService.IReceiptService>, Rac.VOne.Client.Screen.ReceiptService.IReceiptService {
        
        public ReceiptServiceClient() {
        }
        
        public ReceiptServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReceiptServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiptServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiptServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Rac.VOne.Web.Models.ReceiptInputsResult Save(string SessionKey, Rac.VOne.Web.Models.ReceiptInput[] ReceiptInput, byte[] ClientKey, int ParentCustomerId) {
            return base.Channel.Save(SessionKey, ReceiptInput, ClientKey, ParentCustomerId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptInputsResult> SaveAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptInput[] ReceiptInput, byte[] ClientKey, int ParentCustomerId) {
            return base.Channel.SaveAsync(SessionKey, ReceiptInput, ClientKey, ParentCustomerId);
        }
        
        public Rac.VOne.Web.Models.CountResult Delete(string SessionKey, long Id) {
            return base.Channel.Delete(SessionKey, Id);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> DeleteAsync(string SessionKey, long Id) {
            return base.Channel.DeleteAsync(SessionKey, Id);
        }
        
        public Rac.VOne.Web.Models.ReceiptsResult Get(string SessionKey, long[] Id) {
            return base.Channel.Get(SessionKey, Id);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptsResult> GetAsync(string SessionKey, long[] Id) {
            return base.Channel.GetAsync(SessionKey, Id);
        }
        
        public Rac.VOne.Web.Models.ReceiptsResult GetItems(string SessionKey, Rac.VOne.Web.Models.ReceiptSearch ReceiptSearch) {
            return base.Channel.GetItems(SessionKey, ReceiptSearch);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptsResult> GetItemsAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptSearch ReceiptSearch) {
            return base.Channel.GetItemsAsync(SessionKey, ReceiptSearch);
        }
        
        public Rac.VOne.Web.Models.AdvanceReceiptsResult GetAdvanceReceipts(string SessionKey, long originalReceiptId) {
            return base.Channel.GetAdvanceReceipts(SessionKey, originalReceiptId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.AdvanceReceiptsResult> GetAdvanceReceiptsAsync(string SessionKey, long originalReceiptId) {
            return base.Channel.GetAdvanceReceiptsAsync(SessionKey, originalReceiptId);
        }
        
        public Rac.VOne.Web.Models.ReceiptExcludeResult SaveExcludeAmount(string SessionKey, Rac.VOne.Web.Models.ReceiptExclude[] RecExc) {
            return base.Channel.SaveExcludeAmount(SessionKey, RecExc);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptExcludeResult> SaveExcludeAmountAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptExclude[] RecExc) {
            return base.Channel.SaveExcludeAmountAsync(SessionKey, RecExc);
        }
        
        public Rac.VOne.Web.Models.ReceiptResult SaveMemo(string SessionKey, long ReceiptId, string Memo) {
            return base.Channel.SaveMemo(SessionKey, ReceiptId, Memo);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptResult> SaveMemoAsync(string SessionKey, long ReceiptId, string Memo) {
            return base.Channel.SaveMemoAsync(SessionKey, ReceiptId, Memo);
        }
        
        public Rac.VOne.Web.Models.ReceiptResult DeleteMemo(string SessionKey, long ReceiptId) {
            return base.Channel.DeleteMemo(SessionKey, ReceiptId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptResult> DeleteMemoAsync(string SessionKey, long ReceiptId) {
            return base.Channel.DeleteMemoAsync(SessionKey, ReceiptId);
        }
        
        public Rac.VOne.Web.Models.ReceiptMemoResult GetMemo(string SessionKey, long ReceiptId) {
            return base.Channel.GetMemo(SessionKey, ReceiptId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptMemoResult> GetMemoAsync(string SessionKey, long ReceiptId) {
            return base.Channel.GetMemoAsync(SessionKey, ReceiptId);
        }
        
        public Rac.VOne.Web.Models.AdvanceReceivedResult SaveAdvanceReceived(string SessionKey, Rac.VOne.Web.Models.AdvanceReceived[] ReceiptInfo) {
            return base.Channel.SaveAdvanceReceived(SessionKey, ReceiptInfo);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.AdvanceReceivedResult> SaveAdvanceReceivedAsync(string SessionKey, Rac.VOne.Web.Models.AdvanceReceived[] ReceiptInfo) {
            return base.Channel.SaveAdvanceReceivedAsync(SessionKey, ReceiptInfo);
        }
        
        public Rac.VOne.Web.Models.AdvanceReceivedResult CancelAdvanceReceived(string SessionKey, Rac.VOne.Web.Models.AdvanceReceived[] ReceiptInfo) {
            return base.Channel.CancelAdvanceReceived(SessionKey, ReceiptInfo);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.AdvanceReceivedResult> CancelAdvanceReceivedAsync(string SessionKey, Rac.VOne.Web.Models.AdvanceReceived[] ReceiptInfo) {
            return base.Channel.CancelAdvanceReceivedAsync(SessionKey, ReceiptInfo);
        }
        
        public Rac.VOne.Web.Models.ReceiptHeadersResult GetHeaderItems(string SessionKey, int CompanyId) {
            return base.Channel.GetHeaderItems(SessionKey, CompanyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptHeadersResult> GetHeaderItemsAsync(string SessionKey, int CompanyId) {
            return base.Channel.GetHeaderItemsAsync(SessionKey, CompanyId);
        }
        
        public Rac.VOne.Web.Models.ReceiptApportionsResult GetApportionItems(string SessionKey, long[] receiptHeaderId) {
            return base.Channel.GetApportionItems(SessionKey, receiptHeaderId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptApportionsResult> GetApportionItemsAsync(string SessionKey, long[] receiptHeaderId) {
            return base.Channel.GetApportionItemsAsync(SessionKey, receiptHeaderId);
        }
        
        public Rac.VOne.Web.Models.ReceiptApportionsResult Apportion(string SessionKey, Rac.VOne.Web.Models.ReceiptApportion[] receiptList) {
            return base.Channel.Apportion(SessionKey, receiptList);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptApportionsResult> ApportionAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptApportion[] receiptList) {
            return base.Channel.ApportionAsync(SessionKey, receiptList);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistCurrency(string SessionKey, int CurrencyId) {
            return base.Channel.ExistCurrency(SessionKey, CurrencyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCurrencyAsync(string SessionKey, int CurrencyId) {
            return base.Channel.ExistCurrencyAsync(SessionKey, CurrencyId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistReceiptCategory(string SessionKey, int CategoryId) {
            return base.Channel.ExistReceiptCategory(SessionKey, CategoryId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistReceiptCategoryAsync(string SessionKey, int CategoryId) {
            return base.Channel.ExistReceiptCategoryAsync(SessionKey, CategoryId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistCustomer(string SessionKey, int CustomerId) {
            return base.Channel.ExistCustomer(SessionKey, CustomerId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCustomerAsync(string SessionKey, int CustomerId) {
            return base.Channel.ExistCustomerAsync(SessionKey, CustomerId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistSection(string SessionKey, int SectionId) {
            return base.Channel.ExistSection(SessionKey, SectionId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistSectionAsync(string SessionKey, int SectionId) {
            return base.Channel.ExistSectionAsync(SessionKey, SectionId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistCompany(string SessionKey, int CompanyId) {
            return base.Channel.ExistCompany(SessionKey, CompanyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistCompanyAsync(string SessionKey, int CompanyId) {
            return base.Channel.ExistCompanyAsync(SessionKey, CompanyId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistExcludeCategory(string SessionKey, int CategoryId) {
            return base.Channel.ExistExcludeCategory(SessionKey, CategoryId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistExcludeCategoryAsync(string SessionKey, int CategoryId) {
            return base.Channel.ExistExcludeCategoryAsync(SessionKey, CategoryId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistOriginalReceipt(string SessionKey, long ReceiptId) {
            return base.Channel.ExistOriginalReceipt(SessionKey, ReceiptId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistOriginalReceiptAsync(string SessionKey, long ReceiptId) {
            return base.Channel.ExistOriginalReceiptAsync(SessionKey, ReceiptId);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistNonApportionedReceipt(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo) {
            return base.Channel.ExistNonApportionedReceipt(SessionKey, CompanyId, ClosingFrom, ClosingTo);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistNonApportionedReceiptAsync(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo) {
            return base.Channel.ExistNonApportionedReceiptAsync(SessionKey, CompanyId, ClosingFrom, ClosingTo);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistNonOutputedReceipt(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo) {
            return base.Channel.ExistNonOutputedReceipt(SessionKey, CompanyId, ClosingFrom, ClosingTo);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistNonOutputedReceiptAsync(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo) {
            return base.Channel.ExistNonOutputedReceiptAsync(SessionKey, CompanyId, ClosingFrom, ClosingTo);
        }
        
        public Rac.VOne.Web.Models.ExistResult ExistNonAssignmentReceipt(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo) {
            return base.Channel.ExistNonAssignmentReceipt(SessionKey, CompanyId, ClosingFrom, ClosingTo);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ExistResult> ExistNonAssignmentReceiptAsync(string SessionKey, int CompanyId, System.DateTime ClosingFrom, System.DateTime ClosingTo) {
            return base.Channel.ExistNonAssignmentReceiptAsync(SessionKey, CompanyId, ClosingFrom, ClosingTo);
        }
        
        public Rac.VOne.Web.Models.CountResult Omit(string sessionKey, int doDelete, int loginUserId, Rac.VOne.Web.Models.Transaction[] transactions) {
            return base.Channel.Omit(sessionKey, doDelete, loginUserId, transactions);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> OmitAsync(string sessionKey, int doDelete, int loginUserId, Rac.VOne.Web.Models.Transaction[] transactions) {
            return base.Channel.OmitAsync(sessionKey, doDelete, loginUserId, transactions);
        }
        
        public Rac.VOne.Web.Models.ReceiptSectionTransfersResult SaveReceiptSectionTransfer(string SessionKey, Rac.VOne.Web.Models.ReceiptSectionTransfer[] ReceiptSectionTransfer, int LoginUserId) {
            return base.Channel.SaveReceiptSectionTransfer(SessionKey, ReceiptSectionTransfer, LoginUserId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptSectionTransfersResult> SaveReceiptSectionTransferAsync(string SessionKey, Rac.VOne.Web.Models.ReceiptSectionTransfer[] ReceiptSectionTransfer, int LoginUserId) {
            return base.Channel.SaveReceiptSectionTransferAsync(SessionKey, ReceiptSectionTransfer, LoginUserId);
        }
        
        public Rac.VOne.Web.Models.ReceiptSectionTransfersResult GetReceiptSectionTransferForPrint(string SessionKey, int CompanyId) {
            return base.Channel.GetReceiptSectionTransferForPrint(SessionKey, CompanyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptSectionTransfersResult> GetReceiptSectionTransferForPrintAsync(string SessionKey, int CompanyId) {
            return base.Channel.GetReceiptSectionTransferForPrintAsync(SessionKey, CompanyId);
        }
        
        public Rac.VOne.Web.Models.ReceiptSectionTransfersResult UpdateReceiptSectionTransferPrintFlag(string SessionKey, int CompanyId) {
            return base.Channel.UpdateReceiptSectionTransferPrintFlag(SessionKey, CompanyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptSectionTransfersResult> UpdateReceiptSectionTransferPrintFlagAsync(string SessionKey, int CompanyId) {
            return base.Channel.UpdateReceiptSectionTransferPrintFlagAsync(SessionKey, CompanyId);
        }
        
        public Rac.VOne.Web.Models.ReceiptImportDuplicationResult ReceiptImportDuplicationCheck(string SessionKey, int CompanyId, Rac.VOne.Web.Models.ReceiptImportDuplication[] ReceiptImportDuplication, Rac.VOne.Web.Models.ImporterSettingDetail[] ImporterSettingDetail) {
            return base.Channel.ReceiptImportDuplicationCheck(SessionKey, CompanyId, ReceiptImportDuplication, ImporterSettingDetail);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptImportDuplicationResult> ReceiptImportDuplicationCheckAsync(string SessionKey, int CompanyId, Rac.VOne.Web.Models.ReceiptImportDuplication[] ReceiptImportDuplication, Rac.VOne.Web.Models.ImporterSettingDetail[] ImporterSettingDetail) {
            return base.Channel.ReceiptImportDuplicationCheckAsync(SessionKey, CompanyId, ReceiptImportDuplication, ImporterSettingDetail);
        }
        
        public Rac.VOne.Web.Models.VoidResult AdvanceReceivedDataSplit(string SessionKey, int CompanyId, int LoginUserId, int CurrencyId, long OriginalReceiptId, Rac.VOne.Web.Models.AdvanceReceivedSplit[] AdvanceReceivedSplitList) {
            return base.Channel.AdvanceReceivedDataSplit(SessionKey, CompanyId, LoginUserId, CurrencyId, OriginalReceiptId, AdvanceReceivedSplitList);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.VoidResult> AdvanceReceivedDataSplitAsync(string SessionKey, int CompanyId, int LoginUserId, int CurrencyId, long OriginalReceiptId, Rac.VOne.Web.Models.AdvanceReceivedSplit[] AdvanceReceivedSplitList) {
            return base.Channel.AdvanceReceivedDataSplitAsync(SessionKey, CompanyId, LoginUserId, CurrencyId, OriginalReceiptId, AdvanceReceivedSplitList);
        }
        
        public Rac.VOne.Web.Models.VoidResult CancelAdvanceReceivedDataSplit(string SessionKey, int CompanyId, int LoginUserId, int CurrencyId, long OriginalReceiptId) {
            return base.Channel.CancelAdvanceReceivedDataSplit(SessionKey, CompanyId, LoginUserId, CurrencyId, OriginalReceiptId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.VoidResult> CancelAdvanceReceivedDataSplitAsync(string SessionKey, int CompanyId, int LoginUserId, int CurrencyId, long OriginalReceiptId) {
            return base.Channel.CancelAdvanceReceivedDataSplitAsync(SessionKey, CompanyId, LoginUserId, CurrencyId, OriginalReceiptId);
        }
        
        public Rac.VOne.Web.Models.JournalizingSummariesResult GetReceiptJournalizingSummary(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.GetReceiptJournalizingSummary(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.JournalizingSummariesResult> GetReceiptJournalizingSummaryAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.GetReceiptJournalizingSummaryAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.ReceiptJournalizingsResult ExtractReceiptJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.ExtractReceiptJournalizing(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ReceiptJournalizingsResult> ExtractReceiptJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.ExtractReceiptJournalizingAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.GeneralJournalizingsResult ExtractReceiptGeneralJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.ExtractReceiptGeneralJournalizing(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.GeneralJournalizingsResult> ExtractReceiptGeneralJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.ExtractReceiptGeneralJournalizingAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.CountResult UpdateOutputAt(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.UpdateOutputAt(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> UpdateOutputAtAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.UpdateOutputAtAsync(SessionKey, option);
        }
        
        public Rac.VOne.Web.Models.CountResult CancelReceiptJournalizing(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.CancelReceiptJournalizing(SessionKey, option);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> CancelReceiptJournalizingAsync(string SessionKey, Rac.VOne.Web.Models.JournalizingOption option) {
            return base.Channel.CancelReceiptJournalizingAsync(SessionKey, option);
        }
    }
}
