//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rac.VOne.Client.Screen.FunctionAuthorityMasterService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FunctionAuthorityMasterService.IFunctionAuthorityMaster")]
    public interface IFunctionAuthorityMaster {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/Save", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/SaveResponse")]
        Rac.VOne.Web.Models.FunctionAuthoritiesResult Save(string SessionKey, Rac.VOne.Web.Models.FunctionAuthority[] functionAuthorities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/Save", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/SaveResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthoritiesResult> SaveAsync(string SessionKey, Rac.VOne.Web.Models.FunctionAuthority[] functionAuthorities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/Delete", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/DeleteResponse")]
        Rac.VOne.Web.Models.CountResult Delete(string SessionKey, int CompanyId, int FunctionType, int AuthorityLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/Delete", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/DeleteResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> DeleteAsync(string SessionKey, int CompanyId, int FunctionType, int AuthorityLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/Get", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/GetResponse")]
        Rac.VOne.Web.Models.FunctionAuthorityResult Get(string SessionKey, int CompanyId, int FunctionType, int AuthorityLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/Get", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/GetResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthorityResult> GetAsync(string SessionKey, int CompanyId, int FunctionType, int AuthorityLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/GetByFunctionType", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/GetByFunctionTypeResponse")]
        Rac.VOne.Web.Models.FunctionAuthoritiesResult GetByFunctionType(string SessionKey, int CompanyId, int FunctionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/GetByFunctionType", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/GetByFunctionTypeResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthoritiesResult> GetByFunctionTypeAsync(string SessionKey, int CompanyId, int FunctionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/GetItems", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/GetItemsResponse")]
        Rac.VOne.Web.Models.FunctionAuthoritiesResult GetItems(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/GetItems", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/GetItemsResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthoritiesResult> GetItemsAsync(string SessionKey, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/GetByLoginUser", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/GetByLoginUserResponse")]
        Rac.VOne.Web.Models.FunctionAuthoritiesResult GetByLoginUser(string SessionKey, int CompanyId, string LoginUserCode, int[] FunctionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFunctionAuthorityMaster/GetByLoginUser", ReplyAction="http://tempuri.org/IFunctionAuthorityMaster/GetByLoginUserResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthoritiesResult> GetByLoginUserAsync(string SessionKey, int CompanyId, string LoginUserCode, int[] FunctionType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFunctionAuthorityMasterChannel : Rac.VOne.Client.Screen.FunctionAuthorityMasterService.IFunctionAuthorityMaster, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FunctionAuthorityMasterClient : System.ServiceModel.ClientBase<Rac.VOne.Client.Screen.FunctionAuthorityMasterService.IFunctionAuthorityMaster>, Rac.VOne.Client.Screen.FunctionAuthorityMasterService.IFunctionAuthorityMaster {
        
        public FunctionAuthorityMasterClient() {
        }
        
        public FunctionAuthorityMasterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FunctionAuthorityMasterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FunctionAuthorityMasterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FunctionAuthorityMasterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Rac.VOne.Web.Models.FunctionAuthoritiesResult Save(string SessionKey, Rac.VOne.Web.Models.FunctionAuthority[] functionAuthorities) {
            return base.Channel.Save(SessionKey, functionAuthorities);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthoritiesResult> SaveAsync(string SessionKey, Rac.VOne.Web.Models.FunctionAuthority[] functionAuthorities) {
            return base.Channel.SaveAsync(SessionKey, functionAuthorities);
        }
        
        public Rac.VOne.Web.Models.CountResult Delete(string SessionKey, int CompanyId, int FunctionType, int AuthorityLevel) {
            return base.Channel.Delete(SessionKey, CompanyId, FunctionType, AuthorityLevel);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> DeleteAsync(string SessionKey, int CompanyId, int FunctionType, int AuthorityLevel) {
            return base.Channel.DeleteAsync(SessionKey, CompanyId, FunctionType, AuthorityLevel);
        }
        
        public Rac.VOne.Web.Models.FunctionAuthorityResult Get(string SessionKey, int CompanyId, int FunctionType, int AuthorityLevel) {
            return base.Channel.Get(SessionKey, CompanyId, FunctionType, AuthorityLevel);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthorityResult> GetAsync(string SessionKey, int CompanyId, int FunctionType, int AuthorityLevel) {
            return base.Channel.GetAsync(SessionKey, CompanyId, FunctionType, AuthorityLevel);
        }
        
        public Rac.VOne.Web.Models.FunctionAuthoritiesResult GetByFunctionType(string SessionKey, int CompanyId, int FunctionType) {
            return base.Channel.GetByFunctionType(SessionKey, CompanyId, FunctionType);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthoritiesResult> GetByFunctionTypeAsync(string SessionKey, int CompanyId, int FunctionType) {
            return base.Channel.GetByFunctionTypeAsync(SessionKey, CompanyId, FunctionType);
        }
        
        public Rac.VOne.Web.Models.FunctionAuthoritiesResult GetItems(string SessionKey, int CompanyId) {
            return base.Channel.GetItems(SessionKey, CompanyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthoritiesResult> GetItemsAsync(string SessionKey, int CompanyId) {
            return base.Channel.GetItemsAsync(SessionKey, CompanyId);
        }
        
        public Rac.VOne.Web.Models.FunctionAuthoritiesResult GetByLoginUser(string SessionKey, int CompanyId, string LoginUserCode, int[] FunctionType) {
            return base.Channel.GetByLoginUser(SessionKey, CompanyId, LoginUserCode, FunctionType);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.FunctionAuthoritiesResult> GetByLoginUserAsync(string SessionKey, int CompanyId, string LoginUserCode, int[] FunctionType) {
            return base.Channel.GetByLoginUserAsync(SessionKey, CompanyId, LoginUserCode, FunctionType);
        }
    }
}
