//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rac.VOne.Client.Screen.ClosingService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClosingService.IClosingService")]
    public interface IClosingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosingService/GetClosingInformation", ReplyAction="http://tempuri.org/IClosingService/GetClosingInformationResponse")]
        Rac.VOne.Web.Models.ClosingInformationResult GetClosingInformation(string sessionKey, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosingService/GetClosingInformation", ReplyAction="http://tempuri.org/IClosingService/GetClosingInformationResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ClosingInformationResult> GetClosingInformationAsync(string sessionKey, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosingService/GetClosingHistory", ReplyAction="http://tempuri.org/IClosingService/GetClosingHistoryResponse")]
        Rac.VOne.Web.Models.ClosingHistorysResult GetClosingHistory(string sessionKey, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosingService/GetClosingHistory", ReplyAction="http://tempuri.org/IClosingService/GetClosingHistoryResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ClosingHistorysResult> GetClosingHistoryAsync(string sessionKey, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosingService/Save", ReplyAction="http://tempuri.org/IClosingService/SaveResponse")]
        Rac.VOne.Web.Models.ClosingResult Save(string sessionKey, Rac.VOne.Web.Models.Closing closing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosingService/Save", ReplyAction="http://tempuri.org/IClosingService/SaveResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.ClosingResult> SaveAsync(string sessionKey, Rac.VOne.Web.Models.Closing closing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosingService/Delete", ReplyAction="http://tempuri.org/IClosingService/DeleteResponse")]
        Rac.VOne.Web.Models.CountResult Delete(string sessionKey, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosingService/Delete", ReplyAction="http://tempuri.org/IClosingService/DeleteResponse")]
        System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> DeleteAsync(string sessionKey, int companyId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClosingServiceChannel : Rac.VOne.Client.Screen.ClosingService.IClosingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClosingServiceClient : System.ServiceModel.ClientBase<Rac.VOne.Client.Screen.ClosingService.IClosingService>, Rac.VOne.Client.Screen.ClosingService.IClosingService {
        
        public ClosingServiceClient() {
        }
        
        public ClosingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClosingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClosingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClosingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Rac.VOne.Web.Models.ClosingInformationResult GetClosingInformation(string sessionKey, int companyId) {
            return base.Channel.GetClosingInformation(sessionKey, companyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ClosingInformationResult> GetClosingInformationAsync(string sessionKey, int companyId) {
            return base.Channel.GetClosingInformationAsync(sessionKey, companyId);
        }
        
        public Rac.VOne.Web.Models.ClosingHistorysResult GetClosingHistory(string sessionKey, int companyId) {
            return base.Channel.GetClosingHistory(sessionKey, companyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ClosingHistorysResult> GetClosingHistoryAsync(string sessionKey, int companyId) {
            return base.Channel.GetClosingHistoryAsync(sessionKey, companyId);
        }
        
        public Rac.VOne.Web.Models.ClosingResult Save(string sessionKey, Rac.VOne.Web.Models.Closing closing) {
            return base.Channel.Save(sessionKey, closing);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.ClosingResult> SaveAsync(string sessionKey, Rac.VOne.Web.Models.Closing closing) {
            return base.Channel.SaveAsync(sessionKey, closing);
        }
        
        public Rac.VOne.Web.Models.CountResult Delete(string sessionKey, int companyId) {
            return base.Channel.Delete(sessionKey, companyId);
        }
        
        public System.Threading.Tasks.Task<Rac.VOne.Web.Models.CountResult> DeleteAsync(string sessionKey, int companyId) {
            return base.Channel.DeleteAsync(sessionKey, companyId);
        }
    }
}
