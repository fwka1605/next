"use strict";const accordionBody=document.querySelectorAll("[data-accordion-body]"),accordionTrigger=document.querySelectorAll("[data-accordion-trigger]");if(0!=accordionTrigger.length){let o;Array.from(accordionBody,t=>{o=t.offsetHeight,t.style.height="0px"});const t=(t,e)=>{t.classList.contains(e)?t.style.height="0px":t.style.height=o},e=o=>{Array.from(accordionBody,e=>{e.dataset.accordionBody!==o.dataset.accordionTrigger?(e.classList.remove("is-accordion-open"),e.style.height="0px"):e.dataset.accordionBody===o.dataset.accordionTrigger&&(t(e,"is-accordion-open"),e.classList.toggle("is-accordion-open"))}),o.parentNode.classList.toggle("is-accordion-open")};Array.from(accordionTrigger,o=>{o.addEventListener("click",()=>{e(o)})},!1)}class ModalInit{constructor(){this.modalEventBind()}modalEventBind(){const o=document.getElementById("modal-body"),t=document.querySelectorAll("[data-modal-contents");let e;const a=document.querySelectorAll("[data-modal]"),c=document.querySelectorAll("[data-modal-close]");if(0!=a.length){(()=>{const o=document.createElement("div");document.body.appendChild(o),o.setAttribute("id","modal-cover"),e=document.getElementById("modal-cover")})();const d=o=>{Array.from(t,t=>{t.dataset.modalContents===o&&t.classList.add("is-show")})};Array.from(a,t=>{t.addEventListener("click",()=>{o.classList.add("is-show"),t.dataset.modal&&d(t.dataset.modal),e.classList.add("is-show")})},!1),e.addEventListener("click",()=>{e.classList.remove("is-show"),o.classList.remove("is-show")}),Array.from(c,t=>{t.addEventListener("click",()=>{o.classList.remove("is-show"),e.classList.remove("is-show")})},!1)}}}const modal=new ModalInit;!function(o){o(function(){var t=o("#breadcrumb-outer h1").text();(window.onload=function(){o(".bredcrumb__list__item__page-title").text(t)})()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
